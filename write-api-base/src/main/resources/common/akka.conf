akka {
  stdout-loglevel = off
  loglevel = INFO
  log-dead-letters-during-shutdown = on
  log-config-on-start = off

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster
    default-dispatcher {
      fork-join-executor {
        parallelism-min = 8
        parallelism-min = ${?AKKA_ACTOR_DEFAULT_DISPATCHER_FORK_JOIN_PARALLELISM_MIN}
        parallelism-factor = 2.0
        parallelism-factor = ${?AKKA_ACTOR_DEFAULT_DISPATCHER_FORK_JOIN_PARALLELISM_FACTOR}
        parallelism-max = 64
        parallelism-max = ${?AKKA_ACTOR_DEFAULT_DISPATCHER_FORK_JOIN_PARALLELISM_MAX}
        task-peeking-mode = "FIFO"
      }
      throughput = 1
    }
    allow-java-serialization = off
  }

  persistence.journal {
    plugin = "j5ik2o.dynamo-db-journal"
    auto-start-journals = ["j5ik2o.dynamo-db-journal"]
  }

  persistence.snapshot-store {
    plugin = "j5ik2o.dynamo-db-snapshot"
    auto-start-snapshot-stores = ["j5ik2o.dynamo-db-snapshot"]
  }

  actor.serialization-bindings {
    "com.github.j5ik2o.adceet.api.write.CborSerializable" = jackson-cbor
  }

  http {
    server {
      preview.enable-http2 = off
      server-header = akka-http/${akka.http.version}
      default-http-port = 8081

      max-connections = 1024
      max-connections = ${?AKKA_HTTP_SERVER_MAX_CONNECTIONS}
    }
  }

  management.health-checks {
    readiness-path = "health/ready"
    liveness-path = "health/alive"
  }

  persistence {
    journal {
      plugin = "j5ik2o.dynamo-db-journal"
      auto-start-journals = ["j5ik2o.dynamo-db-journal"]
    }
    snapshot-store {
      plugin = "j5ik2o.dynamo-db-snapshot"
      auto-start-snapshot-stores = ["j5ik2o.dynamo-db-snapshot"]
    }
    snapshot-store-plugin-fallback {
      # NOTE SNAPSHOTから復元できなかった場合に、ジャーナルの先頭からの復元を行うかどうか。
      # ジャーナルの先頭からの復元には、システム負荷やレイテンシ悪化などの問題が伴うため、原則としてこれを前提とすべきではない。
      # 基本は無効としておき、必要になったとき(SNAPSHOTのスキーマ互換性が失われた、など)に適宜有効化する想定。
      snapshot-is-optional = false
    }
  }
}
