image:
  repository: '{{ .Values.writeApi.writeApiServer.backend.image.repository }}'
  tags: '{{ env "WRITE_API_SERVER_IMAGE_TAG" | default .Values.writeApi.writeApiServer.backend.image.tag}}'
  pullPolicy: '{{ .Values.writeApi.writeApiServer.backend.image.pullPolicy}}'

{{- if .Values.ecrCred.enabled }}
imagePullSecrets:
  - name: ecr-cred-regcred
{{- end }}

nameOverride: ""
fullnameOverride: ""

akka:
  cluster:
    enabled: true
  discovery:
    enabled: true
  management:
    enabled: true
    service:
      enabled: false
    healthChecks:
      livenessPath: health/alive
      readinessPath: health/ready
  http:
    enabled: false
  remote:
    enabled: true

affinity: {}

command:
  {{- toYaml .Values.writeApi.writeApiServer.backend.command | nindent 2 }}

env:
  {{- with .Values.writeApi.writeApiServer.backend.env }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- with .Values.writeApi.env }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  - name: CONFIG_FORCE_kamon_environment_tags_version
    value: '{{ env "WRITE_API_SERVER_IMAGE_TAG" | default .Values.writeApi.writeApiServer.backend.image.tag}}'

lifecycle:
  preStop:
    exec:
      command: [ "sh", "-c", "sleep {{ .Values.writeApi.writeApiServer.backend.processTimeoutInSec}}" ]

startupProbe:
  enabled: false

livenessProbe:
  enabled: false
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

nodeSelector: {}

podAnnotations: {}

podLabels:
  adceet/akka-cluster-name: '{{ .Values.writeApi.akkaClusterName }}'

podSecurityContext:
  fsGroup: 0

readinessProbe:
  enabled: false
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

replicaCount: {{ .Values.writeApi.writeApiServer.backend.replicaCount }}

resources:
  {{- toYaml .Values.writeApi.writeApiServer.backend.resources | nindent 2 }}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 10%
    maxUnavailable: 0%

terminationGracePeriodSeconds: {{ add .Values.writeApi.writeApiServer.backend.processTimeoutInSec 5 }}

rbac:
  create: true

serviceAccount:
  create: {{ .Values.writeApi.writeApiServer.backend.serviceAccount.create }}
  {{- if .Values.writeApi.writeApiServer.backend.serviceAccount.name }}
  name: {{ .Values.writeApi.writeApiServer.backend.serviceAccount.name }}
  {{- end }}

podDisruptionBudget:
  enabled: true
  maxUnavailable: 1

autoscaling:
  {{- toYaml .Values.writeApi.writeApiServer.backend.autoscaling | nindent 2 }}

metrics:
  enabled: false
  port: 9095
  path: "/"

configmaps:
  chart.conf: ""
  akka.conf: ""
  kamon.conf: ""

useResourceApplicationConf: false